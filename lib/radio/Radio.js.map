{"version":3,"sources":["../../dev/mtui/radio/Radio.jsx"],"names":["Radio","props","state","checked","value","e","onClick","disabled","onChange","defaultChecked","undefined","setState","nextProps","nextState","className","other","cName","push","bind","join","children","defaultProps","RadioGroup","that","defaultValue","type","self","val","tmp","MT_IE9","Date","getTime","map","elem","index","onRadioChange"],"mappings":"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","file":"Radio.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nclass Radio extends Component {\r\n    static defaultProps = {\r\n        checked: false,\r\n        value: null\r\n    }\r\n\r\n    // 构造函数\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n            value: null\r\n        };\r\n    }\r\n\r\n    //\r\n    onClick(value, e){\r\n\r\n        if(this.props.onClick){\r\n            this.props.onClick(e);\r\n        }\r\n\r\n        if(this.props.disabled){\r\n            return;\r\n        }\r\n\r\n        if(this.props.onChange){\r\n            this.props.onChange(!this.props.checked, this.props, e);\r\n        }\r\n\r\n        if(this.props.defaultChecked !== undefined){\r\n            let checked = !this.state.checked;\r\n            this.setState({\r\n                checked: checked,\r\n                value: value\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // 获取值\r\n    getValue(){\r\n        return {\r\n            checked: !this.state.checked,\r\n            value: this.state.value\r\n        };\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if(nextProps.checked !== this.props.checked){\r\n            this.setState({\r\n                checked: nextProps.checked,\r\n                value: nextProps.value\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        // 不受控\r\n        if(this.props.defaultChecked !== undefined){\r\n            this.setState({\r\n                checked: this.props.defaultChecked,\r\n                value: this.props.value\r\n            });\r\n        }\r\n\r\n        // 受控\r\n        if(this.props.checked){\r\n            this.setState({\r\n                checked: this.props.checked,\r\n                value: this.props.value\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let {className, disabled, onClick, value, ...other} = this.props;\r\n        let cName = ['mt-radio'];\r\n\r\n        if(this.state.checked){\r\n            cName.push('mt-radio-checked');\r\n        }\r\n\r\n        if(className){\r\n            cName.push(className);\r\n        }\r\n\r\n        if(disabled){\r\n            cName.push('mt-radio-disabled');\r\n        }\r\n\r\n        return (\r\n            <div {...other} onClick={this.onClick.bind(this, value)} className={cName.join(' ')}>\r\n                <span className=\"mt-radio-icon\"></span>\r\n                <span className=\"mt-text\">{this.props.children}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// /组\r\nclass RadioGroup extends Component {\r\n    // 构造函数\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            value : ''\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        type : 'radio'\r\n    }\r\n\r\n    onRadioChange(checked,that,e){\r\n        //console.log(that);\r\n        if(this.props.onChange){\r\n            this.props.onChange({\r\n                value:that.value,\r\n                children:that.children\r\n            })\r\n        }\r\n\r\n        //不受控组件\r\n        if(this.props.defaultValue){\r\n            this.setState({\r\n                value: that.value\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if(this.props.defaultValue){\r\n            this.setState({\r\n                value: this.props.defaultValue\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let {className,type, ...other} = this.props;\r\n        let cName = ['mt-radio-group'];\r\n        let self = this;\r\n        let val = null;\r\n        if(this.props.value){\r\n            val = this.props.value\r\n        }else{\r\n            val = this.state.value\r\n        }\r\n\r\n        if(type == 'button'){\r\n            cName.push('mt-radio-group-button')\r\n        }\r\n\r\n        //ie9 兼容处理\r\n        let tmp = '';\r\n        if(MT_IE9){\r\n            tmp = new Date().getTime()\r\n        }\r\n\r\n        return <div {...other} className={cName.join(' ')}>\r\n                    {\r\n                        this.props.children.map(function(elem, index) {\r\n                            let {children, value, ...other} = elem.props;\r\n                            let checked = ( val == value ? true : false);\r\n                            return <Radio {...other} onChange={self.onRadioChange.bind(self)} value={value} checked={checked} key={index+tmp}>{elem.props.children}</Radio>;\r\n                        })\r\n                    }\r\n                </div>\r\n    }\r\n}\r\n\r\nRadio.RadioGroup = RadioGroup;\r\n\r\n//主页\r\nexport default Radio;"]}