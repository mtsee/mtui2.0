{"version":3,"sources":["../../dev/mtui/swipers/Swiper.jsx"],"names":["Swiper","props","state","activeIndex","transX","overflow","disable","prev","next","timer","nextProps","nextState","setActiveIndex","children","length","setOverflow","index","callback","_tab","refs","_this","setState","setTranslate3d","changeback","that","thatLeft","offsetLeft","offsetWidth","headWidth","head","Math","abs","previousSibling","nextSibling","setTransX","box","clickback","mark","len","clearInterval","autoPlay","self","setInterval","animate","button","other","width","style","map","elem","changeswiper","bind","name","body","prevBtn","prevAndNextClick","nextBtn","prevButton","prevNextButtonClick","nextButton","defaultProps","SwiperItem"],"mappings":"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","file":"Swiper.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\n// activeIndex 默认选中\r\n// changeback 切换的回调\r\n// clickback 点击回调\r\n// animate 是否开启动画\r\nclass Swiper extends Component {\r\n\r\n    // 构造函数\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex: props.activeIndex || 0,\r\n            transX: 0,\r\n            overflow: false,\r\n            disable: {\r\n                prev: false,\r\n                next: false\r\n            }\r\n        }\r\n        this.timer = null;\r\n    }\r\n\r\n    static defaultProps = {\r\n        animate: 'move',\r\n        name: '',\r\n        button: true,\r\n        autoPlay: false\r\n    }\r\n\r\n    // 更新设置\r\n    componentDidUpdate(nextProps, nextState) {\r\n\r\n        // 设置选中状态\r\n        if (nextProps.activeIndex !== this.props.activeIndex) {\r\n            this.setActiveIndex(nextProps.activeIndex);\r\n        }\r\n\r\n        // 监听按钮\r\n        if (nextProps.children.length !== this.props.children.length) {\r\n            // 设置overflow\r\n            this.setOverflow();\r\n        }\r\n    }\r\n\r\n    // 设置选中\r\n    setActiveIndex(index, callback) {\r\n        let _tab = this.refs['swiper_' + index];\r\n        let _this = this;\r\n        this.setState({\r\n            activeIndex: index\r\n        }, function () {\r\n            // 设置moreStyle\r\n            _this.setTranslate3d(_tab, index);\r\n        });\r\n\r\n        // 变化回调函数\r\n        this.props.changeback ? this.props.changeback(index) : null;\r\n    }\r\n\r\n    // 设置transX\r\n    setTranslate3d(that, index) {\r\n\r\n        let thatLeft = that.offsetLeft + that.offsetWidth,\r\n            headWidth = this.refs.head.offsetWidth,\r\n            transX = Math.abs(this.state.transX);\r\n        // 左超出\r\n        if (transX > that.offsetLeft - 10) {\r\n            // console.log('左超出')\r\n            transX = that.offsetWidth - thatLeft + (index === 0 ? 0 : that.previousSibling.offsetWidth)\r\n        } else if (thatLeft - transX > headWidth - (that.nextSibling ? that.nextSibling.offsetWidth : 0)) {\r\n            // console.log('右超出')\r\n            // 偏移headWidth - thatLeft;\r\n            transX = headWidth - thatLeft - (this.props.children.length === index + 1 ? 0 : that.nextSibling.offsetWidth);\r\n        } else {\r\n            transX = -transX;\r\n        }\r\n        this.setTransX(transX);\r\n    }\r\n\r\n    // 设置transX\r\n    setTransX(transX) {\r\n        let disable = null;\r\n        if (transX == 0) {\r\n            disable = {\r\n                prev: true,\r\n                next: false\r\n            };\r\n        } else if (-transX == this.refs.box.offsetWidth - this.refs.head.offsetWidth) {\r\n            disable = {\r\n                prev: false,\r\n                next: true\r\n            };\r\n        } else {\r\n            disable = {\r\n                prev: false,\r\n                next: false\r\n            };\r\n        }\r\n        this.setState({\r\n            transX: transX,\r\n            disable: disable\r\n        });\r\n    }\r\n\r\n    // swiper切换触发\r\n    changeswiper(index) {\r\n        this.setActiveIndex(index);\r\n\r\n        // 点击回调\r\n        this.props.clickback ? this.props.clickback(index) : null;\r\n    }\r\n\r\n    // 超出宽度，显示切换按钮\r\n    setOverflow() {\r\n        // overflow 判断\r\n        if (this.refs.head.offsetWidth < this.refs.box.offsetWidth) {\r\n            this.setState({\r\n                overflow: true\r\n            });\r\n            this.setTransX(this.state.transX);\r\n        }\r\n    }\r\n\r\n    // 上一页,下一页\r\n    prevAndNextClick(mark) {\r\n        let transX = Math.abs(this.state.transX);\r\n        if (mark === 'prev') {\r\n            transX = transX - this.refs.head.offsetWidth;\r\n            if (transX < 0) {\r\n                transX = 0;\r\n            }\r\n        } else {\r\n            transX = transX + this.refs.head.offsetWidth;\r\n            if (this.refs.box.offsetWidth - transX < this.refs.head.offsetWidth) {\r\n                transX = this.refs.box.offsetWidth - this.refs.head.offsetWidth;\r\n            }\r\n        }\r\n        this.setTransX(-transX);\r\n    }\r\n\r\n    // 上一个图\r\n    prevNextButtonClick(mark) {\r\n        let index = this.state.activeIndex;\r\n        let len = this.props.children.length;\r\n        if (mark === 'prev') {\r\n            index--;\r\n            if (index < 0) {\r\n                index = len - 1;\r\n            }\r\n        } else {\r\n            index++;\r\n            if (index > len - 1) {\r\n                index = 0;\r\n            }\r\n        }\r\n        this.setActiveIndex(index);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.children.length !== 0) {\r\n            this.setActiveIndex(this.state.activeIndex);\r\n            // 设置overflow\r\n            this.setOverflow();\r\n        }\r\n\r\n        // 自动播放\r\n        if (this.props.autoPlay) {\r\n            let self = this;\r\n            this.timer = setInterval(function () {\r\n                let index = self.state.activeIndex;\r\n                if (index > self.props.children.length - 2) {\r\n                    index = 0;\r\n                } else {\r\n                    index++;\r\n                }\r\n                self.setActiveIndex(index);\r\n            }, this.props.autoPlay);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let _this = this;\r\n        let { activeIndex, changeback, animate, button, autoPlay, ...other } = this.props;\r\n        let head = <div ref=\"head\" style={{ width: this.props.style.width - 40 }} className={\"mt-swiper-header\" + (this.state.overflow ? ' mt-swiper-overflow' : '')}>\r\n            <div className=\"mt-swiper-headbox\" style={{ \"transform\": \"translate3d(\" + this.state.transX + \"px,0,0)\" }}>\r\n                <ul ref=\"box\" className=\"clearfix\">\r\n                    {\r\n                        this.props.children.length != 0 ?\r\n                            this.props.children.map(function (elem, index) {\r\n                                return <li ref={'swiper_' + index} onClick={_this.changeswiper.bind(_this, index)} key={index} className={\"mt-swiper-tab\" + (_this.state.activeIndex == index ? ' mt-swiper-tab-active' : '')}>{elem.props.name}</li>\r\n                            }) : null\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        let body = <div className=\"mt-swiper-content\">\r\n            <div className={\"mt-swiper-items clearfix\" + (\" mt-swiper-animate-\" + this.props.animate)}>\r\n                {\r\n                    this.props.children.length != 0 ?\r\n                        this.props.children.map(function (elem, index) {\r\n                            return <div key={index} className={\"mt-swiper-item\" + (_this.state.activeIndex == index ? ' mt-swiper-item-active' : '')}>{elem.props.children}</div>\r\n                        }) : null\r\n                }\r\n            </div>\r\n        </div>;\r\n        let prevBtn = this.state.overflow ? <a onClick={this.prevAndNextClick.bind(_this, 'prev')} className={\"mt-swiper-prev\" + (this.state.disable.prev ? ' mt-swiper-disabled' : '')}><i className=\"iconfont icon-arrowl\"></i></a> : null;\r\n        let nextBtn = this.state.overflow ? <a onClick={this.prevAndNextClick.bind(_this, 'next')} className={\"mt-swiper-next\" + (this.state.disable.next ? ' mt-swiper-disabled' : '')}><i className=\"iconfont icon-arrowr\"></i></a> : null;\r\n\r\n        // 切换图\r\n        let prevButton = this.props.button ? <a onClick={this.prevNextButtonClick.bind(_this, 'prev')} className=\"mt-swiper-prevbutton\"><i className=\"iconfont icon-arrowl\"></i></a> : null;\r\n        let nextButton = this.props.button ? <a onClick={this.prevNextButtonClick.bind(_this, 'next')} className=\"mt-swiper-nextbutton\"><i className=\"iconfont icon-arrowr\"></i></a> : null;\r\n\r\n        return (\r\n            <div className=\"mt-swiper\" {...other}>\r\n                {prevButton}\r\n                {nextButton}\r\n                {prevBtn}\r\n                {nextBtn}\r\n                {head}\r\n                {body}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 自定义的item 这里只是为了定义一个标签名称\r\nclass SwiperItem extends Component {\r\n    // 构造函数\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nSwiper.SwiperItem = SwiperItem;\r\n\r\n// 主页\r\nexport default Swiper;"]}