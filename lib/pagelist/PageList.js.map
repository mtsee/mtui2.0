{"version":3,"sources":["../../dev/mtui/pagelist/PageList.jsx"],"names":["PageList","props","total","current","state","list","nextProps","nextState","setHtml","setState","pageSize","max","Math","ceil","num","getMaxPage","console","error","parseInt","toPage","size","mark","callback","_this","i","push","className","grid","other","cName","prevPage","bind","map","elem","index","toString","Date","indexOf","replace","prevSize","nextSize","nextPage","Component","defaultProps"],"mappings":"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","file":"PageList.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport setGridName from '../utils/setGridName';\r\n\r\nclass PageList extends React.Component {\r\n\r\n    //  size : 中间预留个数\r\n    static defaultProps = {size: 3, pageSize: 10, total: 0, current: 1, callback: null}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.total = props.total;\r\n        this.current = props.current;\r\n        this.state = {\r\n            list: []\r\n        };\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if(nextProps.total !== this.props.total){\r\n            if(nextProps.total){\r\n                this.total = nextProps.total;\r\n                this.setHtml(true);\r\n            }else{\r\n                this.setState({\r\n                    list: []\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // 获取最大页数\r\n    getMaxPage(){\r\n        const total = this.total;\r\n        const {pageSize} = this.props;\r\n        let max = Math.ceil(total / pageSize);\r\n        return max;\r\n    }\r\n\r\n    // 跳转页面\r\n    toPage(num){\r\n        if (num !== '' && num <= this.getMaxPage() && num > 0 ) {\r\n            this.current = num;\r\n            this.setHtml();\r\n            return true;\r\n        } else {\r\n            console.error('请输入正确的页码！');\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // 上一页\r\n    nextPage(){\r\n        this.current = parseInt(this.current, 10);\r\n        if(this.current + 1 > this.getMaxPage()){\r\n            return;\r\n        }\r\n        this.toPage(this.current + 1);\r\n    }\r\n\r\n    // 下一页\r\n    prevPage(){\r\n        if(this.current - 1 < 1){\r\n            return;\r\n        }\r\n        this.toPage(this.current - 1);\r\n    }\r\n\r\n    // 上一段\r\n    prevSize(){\r\n        const {size} = this.props;\r\n        this.current -= size;\r\n        if(this.current < 1){\r\n            this.current = 1;\r\n        }\r\n        this.setHtml();\r\n    }\r\n\r\n    // 下一段\r\n    nextSize(){\r\n        let {size} = this.props;\r\n        let max = this.getMaxPage();\r\n        this.current = parseInt(this.current, 10) + parseInt(size, 10);\r\n        if(this.current > max){\r\n            this.current = max;\r\n        }\r\n        this.setHtml();\r\n    }\r\n\r\n    // 设置html\r\n    setHtml(mark){\r\n        let {size, callback} = this.props;\r\n        let current = parseInt(this.current, 10);\r\n\r\n        if(size < 3){\r\n            console.error('最小size:3!');\r\n            return;\r\n        }\r\n        let list = [];\r\n        let _this = this;\r\n        let max = parseInt(this.getMaxPage(), 10);\r\n\r\n        // 如果小于size ，直接显示出来\r\n        if(max <= size || max <= size + 3){\r\n            for(var i = 1; i <= max; i++){\r\n                list.push(i === current ? i + ':active' : i);\r\n            }\r\n        // 如果大于size\r\n        }else{\r\n            // 比如 1234...10 size=3; current在123中\r\n            if(current <= size){\r\n                for(let i = 1; i <= size + 1; i++){\r\n                    list.push(i === current ? i + ':active' : i);\r\n                }\r\n                list.push('next');\r\n                list.push(max);\r\n            // 如果current 在 4 ~ 10-size 中\r\n            }else if(current > size && current <= max - size){\r\n                list.push(1);\r\n                list.push('prev');\r\n                for(let i = current - 1; i < parseInt(size, 10) + parseInt(current, 10) - 1; i++){\r\n                    list.push(i === current ? i + ':active' : i);\r\n                }\r\n                list.push('next');\r\n                list.push(max);\r\n            // 如果current 在 10-size ~ 10 中\r\n            }else{\r\n                list.push(1);\r\n                list.push('prev');\r\n                for(let i = max - size; i < max; i++){\r\n                    list.push(i === current ? i + ':active' : i);\r\n                }\r\n                list.push(max === current ? max + ':active' : max);\r\n            }\r\n        }\r\n        this.setState({\r\n            list: list\r\n        });\r\n\r\n        // 如果是自动加载的数据，不执行回调，避免重复执行\r\n        if(!mark){ \r\n            // 回调函数\r\n            callback({\r\n                current: parseInt(_this.current, 10),\r\n                total: _this.total,\r\n                pageSize: _this.props.pageSize\r\n            });\r\n        }\r\n    }\r\n\r\n    // 刷新组件\r\n    refresh = (current) => {\r\n        this.current = current || 1;\r\n        this.setHtml(true);\r\n    }\r\n\r\n    render(){\r\n        const {className, grid, size, pageSize, total, current, callback, ...other} = this.props;\r\n        let cName = '';\r\n        let _this = this;\r\n        if(grid){\r\n            cName = setGridName(grid, 'mt-pagelist');\r\n        }else{\r\n            cName = 'mt-pagelist';\r\n        }\r\n        if(total === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <div {...other} className={cName}>\r\n                <a className=\"mt-btn mt-pagelist-prev\" onClick={this.prevPage.bind(this)}>上一页</a>\r\n                <div className=\"mt-pagelist-list\">\r\n                    <ul>\r\n                        {\r\n                            this.state.list.map(function(elem, index) {\r\n                                elem = elem.toString();\r\n                                index = +new Date() + index;\r\n                                if(elem.indexOf('active') !== -1){\r\n                                    let num = elem.replace(':active', '');\r\n                                    return <li className=\"active\" key={index}><a className=\"mt-btn\" onClick={_this.toPage.bind(_this, num)}>{num}</a></li>;\r\n                                }else if(elem.indexOf('prev') !== -1){\r\n                                    return <li key={index}><a className=\"mt-btn mt-pagelist-prevsize\" onClick={_this.prevSize.bind(_this)}></a></li>;\r\n                                }else if(elem.indexOf('next') !== -1){\r\n                                    return <li key={index}><a className=\"mt-btn mt-pagelist-nextsize\" onClick={_this.nextSize.bind(_this)}></a></li>;\r\n                                }else {\r\n                                    return <li key={index}><a className=\"mt-btn\" onClick={_this.toPage.bind(_this, elem)}>{elem}</a></li>;\r\n                                }\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <a className=\"mt-btn mt-pagelist-next\" onClick={this.nextPage.bind(this)}>下一页</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//  /主页\r\nexport default PageList;"]}