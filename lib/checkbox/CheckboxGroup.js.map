{"version":3,"sources":["../../dev/mtui/checkbox/CheckboxGroup.jsx"],"names":["CheckboxGroup","props","state","value","checked","that","e","arr","indexOf","push","splice","onChange","defaultValue","setState","nextProps","nextState","self","className","type","other","cName","tmp","MT_IE9","Date","getTime","join","children","map","elem","index","check","changeGroup","bind","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;;;AAEA;IACMA,a;;;AACF;AACA,2BAAaC,KAAb,EAAoB;AAAA;;AAAA,wJACVA,KADU;;AAEhB,cAAKC,KAAL,GAAa;AACTC,mBAAO;AADE,SAAb;AAFgB;AAKnB;;;;oCAOWC,O,EAASC,I,EAAMC,C,EAAE;;AAEzB,gBAAIC,MAAM,KAAKL,KAAL,CAAWC,KAArB;AACA,gBAAGC,WAAWG,IAAIC,OAAJ,CAAYH,KAAKF,KAAjB,MAA4B,CAAC,CAA3C,EAA6C;AACzCI,oBAAIE,IAAJ,CAASJ,KAAKF,KAAd;AACH,aAFD,MAEK;AACDI,oBAAIG,MAAJ,CAAWH,IAAIC,OAAJ,CAAYH,KAAKF,KAAjB,CAAX,EAAoC,CAApC;AACH;;AAED,gBAAG,KAAKF,KAAL,CAAWU,QAAd,EAAuB;AACnB,qBAAKV,KAAL,CAAWU,QAAX,CAAoBJ,GAApB;AACH;;AAED;AACA,gBAAG,KAAKN,KAAL,CAAWW,YAAd,EAA2B;AACvB,qBAAKC,QAAL,CAAc;AACVV,2BAAOI;AADG,iBAAd;AAGH;AAEJ;;AAED;;;;6CACqB;AACjB,gBAAG,KAAKN,KAAL,CAAWW,YAAd,EAA2B;AACvB,qBAAKC,QAAL,CAAc;AACVV,2BAAO,KAAKF,KAAL,CAAWW;AADR,iBAAd;AAGH;;AAED,gBAAG,KAAKX,KAAL,CAAWE,KAAd,EAAoB;AAChB,qBAAKU,QAAL,CAAc;AACVV,2BAAO,KAAKF,KAAL,CAAWE;AADR,iBAAd;AAGH;AACJ;;AAED;;;;4CACoBW,S,EAAWC,S,EAAW;AACtC,gBAAGD,UAAUX,KAAV,KAAoB,KAAKF,KAAL,CAAWE,KAAlC,EAAwC;AACpC,qBAAKU,QAAL,CAAc;AACVV,2BAAOW,UAAUX;AADP,iBAAd;AAGH;AACJ;;;iCAEO;;AAEJ,gBAAIa,OAAO,IAAX;AAFI,yBAG8B,KAAKf,KAHnC;AAAA,gBAGCgB,SAHD,UAGCA,SAHD;AAAA,gBAGYC,IAHZ,UAGYA,IAHZ;AAAA,gBAGqBC,KAHrB;;AAIJ,gBAAIC,QAAQ,CAAC,mBAAD,CAAZ;;AAEA,gBAAGF,SAAS,QAAZ,EAAqB;AACjBE,sBAAMX,IAAN,CAAW,0BAAX;AACH;;AAED,gBAAIY,MAAM,EAAV;AACA,gBAAGC,MAAH,EAAU;AACND,sBAAM,IAAIE,IAAJ,GAAWC,OAAX,EAAN;AACH;;AAED,mBAAO;AAAA;AAAA,kBAAK,WAAWJ,MAAMK,IAAN,CAAW,GAAX,CAAhB;AAES,qBAAKxB,KAAL,CAAWyB,QAAX,CAAoBC,GAApB,CAAwB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAAA,sCACND,KAAK3B,KADC;AAAA,wBACrCyB,QADqC,eACrCA,QADqC;AAAA,wBAC3BtB,OAD2B,eAC3BA,OAD2B;AAAA,wBACfe,KADe;;;AAG1C,wBAAIW,QAAQ,KAAZ;AACA,wBAAGd,KAAKd,KAAL,CAAWC,KAAX,CAAiBK,OAAjB,CAAyBoB,KAAK3B,KAAL,CAAWE,KAApC,MAA+C,CAAC,CAAnD,EAAqD;AACjD2B,gCAAQ,IAAR;AACH;AACD,2BAAO;AAAA;AAAA,iDAAU,UAAUd,KAAKe,WAAL,CAAiBC,IAAjB,CAAsBhB,IAAtB,CAApB,EAAiD,SAASc,SAAS1B,OAAnE,IAAgFe,KAAhF,IAAuF,KAAKU,QAAQR,GAApG;AAA0GO,6BAAK3B,KAAL,CAAWyB;AAArH,qBAAP;AACH,iBARD;AAFT,aAAP;AAaH;;;;;AAGL;;;AA3FM1B,a,CASKiC,Y,GAAe;AAClBf,UAAM,UADY;AAElBf,WAAO;AAFW,C;eAmFXH,a;;;;;;;;;kCA5FTA,a","file":"CheckboxGroup.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport Checkbox from './Checkbox';\r\n\r\n// /组\r\nclass CheckboxGroup extends Component {\r\n    // 构造函数\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            value: []\r\n        };\r\n    }\r\n\r\n    static defaultProps = {\r\n        type: 'checkbox',\r\n        value: null\r\n    }\r\n\r\n    changeGroup(checked, that, e){\r\n\r\n        let arr = this.state.value;\r\n        if(checked && arr.indexOf(that.value) === -1){\r\n            arr.push(that.value);\r\n        }else{\r\n            arr.splice(arr.indexOf(that.value), 1);\r\n        }\r\n\r\n        if(this.props.onChange){\r\n            this.props.onChange(arr);\r\n        }\r\n\r\n        // 不受控组件\r\n        if(this.props.defaultValue){\r\n            this.setState({\r\n                value: arr\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // 受控组件\r\n    componentWillMount() {\r\n        if(this.props.defaultValue){\r\n            this.setState({\r\n                value: this.props.defaultValue\r\n            });\r\n        }\r\n\r\n        if(this.props.value){\r\n            this.setState({\r\n                value: this.props.value\r\n            });\r\n        }\r\n    }\r\n\r\n    // 受控组件\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if(nextProps.value !== this.props.value){\r\n            this.setState({\r\n                value: nextProps.value\r\n            });\r\n        }     \r\n    }\r\n\r\n    render(){\r\n\r\n        let self = this;\r\n        let {className, type, ...other} = this.props;\r\n        let cName = ['mt-checkbox-group'];\r\n\r\n        if(type === 'button'){\r\n            cName.push('mt-checkbox-group-button');\r\n        }\r\n\r\n        let tmp = '';\r\n        if(MT_IE9){\r\n            tmp = new Date().getTime();\r\n        }\r\n\r\n        return <div className={cName.join(' ')}>\r\n                    {\r\n                        this.props.children.map(function(elem, index) {\r\n                            let {children, checked, ...other} = elem.props;\r\n\r\n                            let check = false;\r\n                            if(self.state.value.indexOf(elem.props.value) !== -1){\r\n                                check = true;\r\n                            }\r\n                            return <Checkbox onChange={self.changeGroup.bind(self)} checked={check || checked} {...other} key={index + tmp}>{elem.props.children}</Checkbox>;\r\n                        })\r\n                    }\r\n                </div>;\r\n    }\r\n}\r\n\r\n// 主页\r\nexport default CheckboxGroup;"]}