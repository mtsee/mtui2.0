{"version":3,"sources":["../../dev/mtui/checkbox/Checkbox.jsx"],"names":["Checkbox","props","state","checked","value","val","e","onClick","disabled","onChange","defaultChecked","undefined","setState","nextProps","nextState","className","other","cName","push","bind","join","children","defaultProps","CheckboxGroup","that","arr","indexOf","splice","defaultValue","self","type","tmp","MT_IE9","Date","getTime","map","elem","index","check","changeGroup"],"mappings":"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","file":"Checkbox.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nclass Checkbox extends Component {\r\n    static defaultProps = {\r\n        checked: false,\r\n        value: null\r\n    }\r\n\r\n    // 构造函数\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n            value: null\r\n        };\r\n    }\r\n\r\n    //\r\n    onClick(val, e){\r\n\r\n        if(this.props.onClick){\r\n            this.props.onClick(e);\r\n        }\r\n\r\n        if(this.props.disabled){\r\n            return;\r\n        }\r\n\r\n        if(this.props.onChange){\r\n            this.props.onChange(!this.props.checked, this.props, e);\r\n        }\r\n\r\n        if(this.props.defaultChecked !== undefined){\r\n            let checked = !this.state.checked;\r\n            this.setState({\r\n                checked: checked,\r\n                value: val\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // 获取值\r\n    getValue(){\r\n        return {\r\n            checked: !this.state.checked,\r\n            value: this.state.value\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        // 不受控\r\n        if(this.props.defaultChecked !== undefined){\r\n            this.setState({\r\n                checked: this.props.defaultChecked,\r\n                value: this.props.value\r\n            });\r\n        }\r\n\r\n        // 受控\r\n        if(this.props.checked){\r\n            this.setState({\r\n                checked: this.props.checked,\r\n                value: this.props.value\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if(nextProps.checked !== this.props.checked){\r\n            this.setState({\r\n                checked: nextProps.checked,\r\n                value: nextProps.value\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let {className, disabled, onClick, checked, value, ...other} = this.props;\r\n        let cName = ['mt-checkbox'];\r\n\r\n        if(this.state.checked && this.state.checked !== 'other'){\r\n            cName.push('mt-checkbox-checked');\r\n        }else if(this.state.checked === 'other'){\r\n            cName.push('mt-checkbox-other');\r\n        }\r\n\r\n        if(className){\r\n            cName.push(className);\r\n        }\r\n\r\n        if(disabled){\r\n            cName.push('mt-checkbox-disabled');\r\n        }\r\n\r\n        return (\r\n            <div {...other} onClick={this.onClick.bind(this, value)} className={cName.join(' ')}>\r\n                <span className=\"mt-checkbox-icon\"></span>\r\n                <span className=\"mt-text\">{this.props.children}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// /组\r\nclass CheckboxGroup extends Component {\r\n    // 构造函数\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            value: []\r\n        };\r\n    }\r\n\r\n    static defaultProps = {\r\n        type: 'checkbox',\r\n        value: null\r\n    }\r\n\r\n    changeGroup(checked, that, e){\r\n\r\n        let arr = this.state.value;\r\n        if(checked && arr.indexOf(that.value) === -1){\r\n            arr.push(that.value);\r\n        }else{\r\n            arr.splice(arr.indexOf(that.value), 1);\r\n        }\r\n\r\n        if(this.props.onChange){\r\n            this.props.onChange(arr);\r\n        }\r\n\r\n        // 不受控组件\r\n        if(this.props.defaultValue){\r\n            this.setState({\r\n                value: arr\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // 受控组件\r\n    componentWillMount() {\r\n        if(this.props.defaultValue){\r\n            this.setState({\r\n                value: this.props.defaultValue\r\n            });\r\n        }\r\n\r\n        if(this.props.value){\r\n            this.setState({\r\n                value: this.props.value\r\n            });\r\n        }\r\n    }\r\n\r\n    // 受控组件\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if(nextProps.value !== this.props.value){\r\n            this.setState({\r\n                value: nextProps.value\r\n            });\r\n        }     \r\n    }\r\n\r\n    render(){\r\n\r\n        let self = this;\r\n        let {className, type, ...other} = this.props;\r\n        let cName = ['mt-checkbox-group'];\r\n\r\n        if(type === 'button'){\r\n            cName.push('mt-checkbox-group-button');\r\n        }\r\n\r\n        let tmp = '';\r\n        if(MT_IE9){\r\n            tmp = new Date().getTime();\r\n        }\r\n\r\n        return <div className={cName.join(' ')}>\r\n                    {\r\n                        this.props.children.map(function(elem, index) {\r\n                            let {children, checked, ...other} = elem.props;\r\n\r\n                            let check = false;\r\n                            if(self.state.value.indexOf(elem.props.value) !== -1){\r\n                                check = true;\r\n                            }\r\n                            return <Checkbox onChange={self.changeGroup.bind(self)} checked={check || checked} {...other} key={index + tmp}>{elem.props.children}</Checkbox>;\r\n                        })\r\n                    }\r\n                </div>;\r\n    }\r\n}\r\n\r\nCheckbox.CheckboxGroup = CheckboxGroup;\r\n\r\n// 主页\r\nexport default Checkbox;"]}